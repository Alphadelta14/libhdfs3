{"name":"Libhdfs3","tagline":"libhdfs3 a native c/c++ hdfs client","body":"libhdfs3\r\n========================\r\n\r\n**A Native C/C++ HDFS Client**\r\n\r\n## Description\r\n\r\nThe Hadoop Distributed File System (HDFS) is a distributed file system designed to run on commodity hardware. HDFS is highly fault-tolerant and is designed to be deployed on low-cost hardware. HDFS provides high throughput access to application data and is suitable for applications that have large data sets.\r\n\r\nHDFS is implemented in JAVA language and additionally provides a JNI based C language library *libhdfs*. To use libhdfs, users must deploy the HDFS jars on every machine. This adds operational complexity for non-Java clients that just want to integrate with HDFS.\r\n\r\n**Libhdfs3**, which is designed as an alternative implementation of libhdfs, is implemented based on native Hadoop RPC protocol and HDFS data transfer protocol. It get rid of the drawback of JNI, has lightweight, small memory footprint code base, and is easy to use and deployed.\r\n\r\nLibhdfs3 is developed by [Pivotal](http://www.pivotal.io/) and first used in HAWQ project which is shipped in [Pivotal HD](http://www.pivotal.io/big-data/pivotal-hd).\r\n\r\n========================\r\n## Installation\r\n\r\n### Requirement\r\n\r\nTo build libhdfs3, the following libraries are needed.\r\n\r\n    cmake (2.8+)                    http://www.cmake.org/\r\n    boost (tested on 1.53+)         http://www.boost.org/\r\n    google protobuf                 http://code.google.com/p/protobuf/\r\n    libxml2                         http://www.xmlsoft.org/\r\n    kerberos                        http://web.mit.edu/kerberos/\r\n    libuuid                         http://sourceforge.net/projects/libuuid/\r\n    libgsasl                        http://www.gnu.org/software/gsasl/\r\n\r\nTo run tests, the following libraries are needed.\r\n\r\n    gtest (tested on 1.7.0)         already integrated in the source code\r\n    gmock (tested on 1.7.0)         already integrated in the source code\r\n\r\nTo run code coverage test, the following tools are needed.\r\n\r\n    gcov (included in gcc distribution)\r\n    lcov (tested on 1.9)            http://ltp.sourceforge.net/coverage/lcov.php\r\n\r\n### Configuration\r\n\r\nAssume libhdfs3 home directory is LIBHDFS3_HOME.\r\n\r\n    cd LIBHDFS3_HOME\r\n    mkdir build\r\n    cd build\r\n    ../bootstrap\r\n\r\nEnvironment variable CC and CXX can be used to setup the compiler.\r\nScript \"bootstrap\" is basically a wrapper of cmake command, user can use cmake directly to tune the configuration. \r\n\r\nRun command \"../bootstrap --help\" for more configuration. \r\n\r\n### Build\r\n\r\nRun command to build\r\n    \r\n    make\r\n    \r\nTo build concurrently, rum make with -j option.\r\n\r\n    make -j8\r\n\r\n### Test\r\n\r\nTo do unit test, run command\r\n\r\n    make unittest\r\n    \r\nTo do function test, first start HDFS, and create the function test configure file at LIBHDFS3_HOME/test/data/function-test.xml, an example can be found at LIBHDFS3_HOME/test/data/function-test.xml.example. And run command.\r\n\r\n    make functiontest\r\n    \r\nTo show code coverage result, run command. Code coverage result can be found at BUILD_DIR/CodeCoverageReport/index.html\r\n\r\n    make ShowCoverage\r\n\r\n### Install\r\n\r\nTo install libhdfs3, run command\r\n\r\n    make install\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}